#=================================================
# Description: Build OpenWrt using GitHub Actions
# Lisence: MIT
# Author: eSirPlayground
# Youtube Channel: https://goo.gl/fvkdwm 
#=================================================

name: Build_x86_64  

# Add a button to trigger the workflow 
on: 
  repository_dispatch:
  workflow_dispatch:

  push:
   branches:
    - master 

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: Check disk space before build
      run: df -h  

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        set +e
        docker rmi `docker images -q`
        echo "Deleting files, please wait ..."
        sudo rm -rf \
          /usr/share/dotnet \
          /usr/local/lib/android \
          /opt/ghc \
          /etc/mysql \
          /etc/php
        sudo -E apt-get -y purge azure-cli* docker* ghc* zulu* hhvm* llvm* firefox* google* dotnet* aspnetcore* powershell* openjdk* adoptopenjdk* mysql* php* mongodb* moby* snap* || true
        sudo -E apt-get update
        sudo -E apt-get -y install ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libfuse-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libpython3-dev libreadline-dev libssl-dev libtool lrzsz mkisofs msmtp ninja-build p7zip p7zip-full patch pkgconf python3 python3-pyelftools python3-setuptools qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev
        sudo -E apt-get -y autoremove --purge
        sudo -E apt-get clean

    - name: Clone source code
      env: 
        REPO_URL: https://github.com/coolsnowwolf/lede
        REPO_BRANCH: master
      run: |
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
        cd openwrt
        echo "src-git kenzo https://github.com/kenzok8/openwrt-packages" >> ./feeds.conf.default
        echo "src-git pw2 https://github.com/xiaorouji/openwrt-passwall-packages" >> ./feeds.conf.default
        
        
    - name: Update & Install feeds
      working-directory: ./openwrt
      run: |
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    #- name: Import external feeds - passwall
    #  working-directory: ./openwrt
    #  run: |
    #    git clone https://github.com/xiaorouji/openwrt-passwall2.git package/lienol
    #    git clone https://github.com/mouse2980/passwall.git package/passwall2  

    
    #    echo "src-git kenzo https://github.com/kenzok8/openwrt-packages" >> ./feeds.conf.default
    #    echo "src-git small https://github.com/kenzok8/small" >> ./feeds.conf.default
    #    echo "src-git mouse2980 https://github.com/mouse2980/OpenWrt-package" >> ./feeds.conf.default
    #    ./scripts/feeds install dns2socks-rust
    #    ./scripts/feeds install geoview

    - name: Import external feeds - srrp
      working-directory: ./openwrt
      run: |
        git clone --depth=1 https://github.com/fw876/helloworld.git package/helloworld

    #- name: Import external feeds - JerryKuKu Argon
    #  working-directory: ./openwrt
    #  run: |
    #    git clone -b 18.06 https://github.com/jerrykuku/luci-theme-argon.git package/luci-theme-argon-jerrykuku

    - name: Configuration Customization - Build_x86_64
      env:
        CONFIG_FILE: 'x86_64.config'
      run: |
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x ./customize.sh && ./customize.sh
        cd openwrt && make defconfig
        
    - name: Download package
      working-directory: ./openwrt
      run: |
        make download -j$(nproc)
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Check disk space and large directories after build step
      run: |
        echo "Current disk usage:"
        df -h
        echo "Top 10 largest directories in openwrt/build_dir:"
        du -sh openwrt/build_dir/* | sort -rh | head -n 10
        echo "Size of openwrt/dl:"
        du -sh openwrt/dl    

    - name: Build firmware
      working-directory: ./openwrt
      run: |
        echo -e "$(nproc) thread build."
        make -j$(nproc) V=s

    - name: Disk Space and Large Directory Report
      if: always() # 保证无论上一步成功或失败，此步骤都会运行
      # 此步骤的默认工作目录是仓库的根目录 (actions/checkout 检出的地方)
      run: |
        echo "================================================================="
        echo "DISK SPACE USAGE REPORT (after 'Build firmware' attempt):"
        echo "================================================================="
        df -h
        echo "-----------------------------------------------------------------"
        echo "TOP 20 LARGEST ITEMS IN ./openwrt/build_dir/ (if it exists):"
        echo "-----------------------------------------------------------------"
        # du 命令显示目录大小，sort -rh 按大小逆序排序，head -n 20 显示前20个
        # 使用 || echo "..." 来避免在目录不存在或为空时报错中断
        du -sh openwrt/build_dir/* 2>/dev/null | sort -rh | head -n 20 || echo "Could not list openwrt/build_dir or it is empty."
        echo "-----------------------------------------------------------------"
        echo "TOTAL SIZE OF KEY DIRECTORIES INSIDE ./openwrt:"
        echo "-----------------------------------------------------------------"
        du -sh openwrt/dl || echo "openwrt/dl not found or empty."
        du -sh openwrt/build_dir || echo "openwrt/build_dir not found or empty."
        du -sh openwrt/bin || echo "openwrt/bin not found or empty."
        du -sh openwrt/staging_dir || echo "openwrt/staging_dir not found or empty."
        du -sh openwrt/feeds || echo "openwrt/feeds not found or empty."
        echo "-----------------------------------------------------------------"
        echo "OVERALL SIZE OF ./openwrt DIRECTORY:"
        echo "-----------------------------------------------------------------"
        du -sh openwrt || echo "openwrt directory not found."
        echo "================================================================="
        echo "DISK SPACE REPORT FINISHED."

    - name : Upload artifact
      uses: actions/upload-artifact@master
      with:
        name: OpenWrt
        path: openwrt/bin
